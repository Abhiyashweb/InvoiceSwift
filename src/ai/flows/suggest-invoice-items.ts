// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A Genkit flow for suggesting invoice items based on past data.
 *
 * - suggestInvoiceItems - A function that handles the suggestion of invoice items.
 * - SuggestInvoiceItemsInput - The input type for the suggestInvoiceItems function.
 * - SuggestInvoiceItemsOutput - The return type for the suggestInvoiceItems function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestInvoiceItemsInputSchema = z.object({
  pastInvoiceData: z.string().describe('Past invoice data to use for generating suggestions.'),
  newInvoiceContext: z.string().describe('Context about the new invoice for which to generate suggestions.'),
});
export type SuggestInvoiceItemsInput = z.infer<typeof SuggestInvoiceItemsInputSchema>;

const SuggestInvoiceItemsOutputSchema = z.object({
  suggestedItems: z.array(z.string()).describe('Suggested invoice items based on past data and new invoice context.'),
});
export type SuggestInvoiceItemsOutput = z.infer<typeof SuggestInvoiceItemsOutputSchema>;

export async function suggestInvoiceItems(input: SuggestInvoiceItemsInput): Promise<SuggestInvoiceItemsOutput> {
  return suggestInvoiceItemsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestInvoiceItemsPrompt',
  input: {schema: SuggestInvoiceItemsInputSchema},
  output: {schema: SuggestInvoiceItemsOutputSchema},
  prompt: `You are an AI assistant that suggests invoice items based on past invoice data and the context of the new invoice.

Past Invoice Data: {{{pastInvoiceData}}}
New Invoice Context: {{{newInvoiceContext}}}

Please suggest invoice items that are relevant to the new invoice context, using the past invoice data as a guide. Return the suggested items as a JSON array of strings.

{{#if suggestedItems}}
  Suggested Items:
  {{#each suggestedItems}}
  - {{{this}}}
  {{/each}}
{{else}}
  No items suggested.
{{/if}}`,
});

const suggestInvoiceItemsFlow = ai.defineFlow(
  {
    name: 'suggestInvoiceItemsFlow',
    inputSchema: SuggestInvoiceItemsInputSchema,
    outputSchema: SuggestInvoiceItemsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
